<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PX.Web.UI.Frameset</name>
    </assembly>
    <members>
        <member name="M:PX.Web.UI.Frameset.ContainerBuilderExtensions.MapExceptionsToStatusCode(Autofac.ContainerBuilder)">
            <summary>
                Maps the certain exception types to the certain status codes.
            </summary>
        </member>
        <member name="M:PX.Web.UI.Frameset.GraphExtensions.DashboardMaintExt._(PX.Data.Events.CacheAttached{PX.Data.FilterHeader.screenID})">
            <remarks>
            <para>We should avoid any attributes that produce SiteMap-based data views on CacheAttached
            because <see cref="T:PX.Data.PXScreenToSiteMapAddHelperBase"/> uses internal SiteMap-derived DAC.</para>
            <para>An example: <see cref="T:PX.Data.PXFilterableAttribute"/> adds a data view for <see cref="T:PX.Data.FilterHeader"/>.
            <see cref="T:PX.Data.FilterHeader"/> has a cache extension <see cref="T:PX.Web.UI.Frameset.Model.FilterHeaderExt"/> that adds
            <see cref="T:PX.Web.UI.Frameset.Model.SiteMapSelectorAttribute"/> to the <see cref="P:PX.Data.FilterHeader.ScreenID"/> field.
            <see cref="T:PX.Web.UI.Frameset.Model.SiteMapSelectorAttribute"/> creates a data view for <see cref="!:SiteMap"/> DAC on CacheAttached.
            It leads to adding SiteMap -&gt; SiteMap cache mapping to <see cref="T:PX.Data.PXCacheCollection"/>
            before any code of the <see cref="T:PX.Data.PXScreenToSiteMapAddHelperBase"/> is executed.</para>
            <para><c>PXGraph.Caches[typeof(SiteMapInternal)]</c> returns
            <c>PXCache&lt;SiteMapInternal&gt;</c> (expected), but <c>PXGraph.Caches[typeof(SiteMap)]</c>
            returns <c>PXCache&lt;SiteMap&gt;</c> and not <c>PXCache&lt;SiteMapInternal&gt;</c>
            like it happens when there is no <see cref="T:PX.Data.PXFilterableAttribute"/>.</para>
            <para>So, when CacheAttached is called for <see cref="T:PX.Data.PXParentAttribute"/> declared on some external DAC,
            it adds its RowDeleted event handler to <c>PXCache&lt;SiteMap&gt;</c>, not to <c>PXCache&lt;SiteMapInternal&gt;</c>.
            That breaks the cascade deletion behavior since the <see cref="!:SiteMapInternal"/> record is deleted,
            but there is no RowDeleted event handler in <c>PXCache&lt;SiteMapInternal&gt;</c>.</para>
            </remarks>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.createdByID">
            <exclude/>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.createdByScreenID">
            <exclude/>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.createdDateTime">
            <exclude/>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.lastModifiedByID">
            <exclude/>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.lastModifiedByScreenID">
            <exclude/>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.DAC.MUIAuditFields.lastModifiedDateTime">
            <exclude/>
        </member>
        <member name="P:PX.Web.UI.Frameset.Model.DTO.Area.ScreenID">
            <summary>
            Used for access rights engine (because it's tied with ScreenID concept).
            </summary>
        </member>
        <member name="P:PX.Web.UI.Frameset.Model.DTO.Subcategory.Deletable">
            <summary>
            For entities that are used in some parts of system logic, so they must not be allowed to delete.
            </summary>
        </member>
        <member name="P:PX.Web.UI.Frameset.Model.DTO.Workspace.ScreenID">
            <summary>
            Used for access rights engine (because it's tied with ScreenID concept).
            </summary>
        </member>
        <member name="P:PX.Web.UI.Frameset.Model.DTO.Workspace.Deletable">
            <summary>
            For entities that are used in some parts of system logic, so they must not be allowed to delete.
            </summary>
        </member>
        <member name="T:PX.Web.UI.Frameset.Model.ListEntryPointExt.entryScreenID">
            <exclude/>
        </member>
        <!-- Badly formed XML comment ignored for member "T:PX.Web.UI.Frameset.Services.RecordDtoBuilderWithCachedContentUsage" -->
        <member name="T:PX.Web.UI.Frameset.Services.UserRecordsToResultsConverter">
            <summary>
            A user records to results converter.
            </summary>
        </member>
        <member name="M:PX.Web.UI.Frameset.Services.UserRecordsToResultsConverter.CreateResultsFromUserRecords(System.Collections.Generic.IReadOnlyCollection{PX.Data.UserRecords.IUserRecord})">
            <summary>
            Converts user records to result DTO more suitable to frontend.
            </summary>
            <param name="userRecords">The user records.</param>
            <returns/>
        </member>
        <member name="M:PX.Web.UI.Frameset.Services.ISiteMapRepository.ResetToDefault">
            <summary>
            Resets all site map configuration back to predefined system settings.
            </summary>
        </member>
        <member name="M:PX.Web.UI.Frameset.Services.ISiteMapService.IsDashboard(System.Guid)">
            <summary>
            Returns true if site map node actually has dashboard configured for this node.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:PX.Web.UI.Frameset.Services.IUrlResolver.SecureQueryString(System.String)" -->
        <member name="M:PX.Web.UI.Frameset.Services.IWorkspaceRepository.GetDefaultWorkspaces">
            <summary>
            Returns default (shared) configuration.
            </summary>
        </member>
        <member name="M:PX.Web.UI.Frameset.Services.IWorkspaceRepository.GetWorkspaces">
            <summary>
            Returns per-user configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="T:PX.Web.UI.Frameset.Services.IUserRecordsToResultsConverter">
            <summary>
            Interface for user records to results converter.
            </summary>
        </member>
        <member name="M:PX.Web.UI.Frameset.Services.IUserRecordsToResultsConverter.CreateResultsFromUserRecords(System.Collections.Generic.IReadOnlyCollection{PX.Data.UserRecords.IUserRecord})">
            <summary>
            Converts user records to result DTO more suitable for frontend.
            </summary>
            <param name="userRecords">The user records.</param>
            <returns/>
        </member>
        <member name="T:FrameHelper">
            <summary>
            Summary description for FrameHelper
            </summary>
        </member>
        <member name="M:FrameHelper.GetScriptFiles">
            <summary>
            Gets the list of the script's urls that need to be registered on page.
            </summary>
        </member>
        <member name="M:FrameHelper.GetCustomScripts">
            <summary>
            Gets the list of custom JS files.
            </summary>
        </member>
        <member name="M:FrameHelper.GetLastUrl(System.Web.HttpContextBase,System.Guid)">
            <summary>
            Calculate the start page url.
            </summary>
        </member>
        <member name="M:FrameHelper.GetDefaultUrl(System.Web.HttpContextBase,System.Guid)">
            <summary>
            Gets the default user Url.
            </summary>
        </member>
        <member name="M:FrameHelper.GetDefaultHelpUrl(System.Web.HttpContextBase)">
            <summary>
            Gets the default help Url.
            </summary>
        </member>
        <member name="M:FrameHelper.GetDefaultHelpPageID">
            <summary>
            Gets the default help page ID.
            </summary>
        </member>
        <member name="M:FrameHelper.ResolveLastUrl(System.Object)">
            <summary>
            Gets the full page Url by specified page identifier.
            </summary>
        </member>
        <member name="M:FrameHelper.IsUserAdmin">
            <summary>
            Checks if user have administrator role.
            </summary>
        </member>
        <member name="M:FrameHelper.GetLastLoginDate(System.Web.Security.MembershipUser)">
            <summary>
            Returns formatted value of the last login date for the active user.
            </summary>
        </member>
        <member name="M:FrameHelper.StoreCurrentUser(System.Web.HttpContextBase)">
            <summary>
            Stores the current user ID in session.
            </summary>
        </member>
        <member name="M:FrameHelper.InitializeApplication(System.Web.HttpContextBase)">
            <summary>
            Initialiazes the application context.
            </summary>
        </member>
        <member name="M:FrameHelper.GetAbsoluteUrl(System.String)">
            <summary>
            Gets the absolute URL.
            </summary>
        </member>
        <member name="M:FrameHelper.GetDefaultTitle">
            <summary>
            Gets the default page title from configuration.
            </summary>
        </member>
        <member name="M:FrameHelper.GetHelpApiHref(System.Boolean)">
            <summary>
            Gets the help Api href from configuration.
            </summary>
        </member>
        <member name="M:FrameHelper.GetHelpApiKey">
            <summary>
            Gets the help Api key from configuration.
            </summary>
        </member>
        <member name="M:FrameHelper.GetTheme">
            <summary>
            Gets the active theme name.
            </summary>
        </member>
        <member name="M:FrameHelper.GetThemeCss">
            <summary>
            Gets the theme file url.
            </summary>
        </member>
        <member name="M:FrameHelper.GetSiteMapPos">
            <summary>
            Gets the sitemap position.
            </summary>
        </member>
        <member name="M:FrameHelper.GetAvailableIcons">
            <summary>
            Gets the list of all available icons.
            </summary>
        </member>
        <member name="M:FrameHelper.GetCompanyLogo(System.Web.HttpContextBase,System.String)">
            <summary>
            Gets the logo image for active company.
            </summary>
        </member>
        <member name="M:FrameHelper.GetLocalizedMessages">
            <summary>
            Gets the list of localized messages.
            </summary>
        </member>
    </members>
</doc>
